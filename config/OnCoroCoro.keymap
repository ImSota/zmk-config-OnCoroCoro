#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/outputs.h>

#include "keycode_japanese.h"
#include <dt-bindings/zmk/mouse.h>

#define DEFAULT 0
#define SYMBOL 1
#define NAVNUM 2
#define FCN 3
#define DEVICE 4
#define MOUSE 5

&mt {
    flavor = "hold-preferred";
};

&lt {
    flavor = "hold-preferred";
};

/ {

    conditional_layers {
        compatible = "zmk,conditional-layers";
        device_layer {
            if-layers = <SYMBOL NAVNUM>;
            then-layer = <DEVICE>;
        };
    };

    // combos{
    //     compatible = "zmk,combos";
    //     combo_clk {
    //         timeout-ms = <200>;
    //         key-positions = <37 38>;
    //         bindings = <&mkp MCLK>;
    //     };
    // };

    behaviors {
        // Japanese settings
        minus: jp-minus {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp JP_MINUS>, <&kp JP_UNDER>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        semi: jp-semi {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp JP_SEMI>, <&kp JP_COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sqt: jp-sqt {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp JP_SQT>, <&kp JP_DQT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        // Hold-Tap
        plt: positional_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <1000>;
            quick-tap-ms = <200>;
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <0>;
        };
        mth: mt-hold-while-undecided {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            hold-while-undecided;
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
        lth: lt-hold-while-undecided {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            hold-while-undecided;
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        };
        ltc: lt-with-click {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            hold-while-undecided;
            tapping-term-ms = <200>;
            bindings = <&mo>, <&mkp>;
        };
        mtt: mt-tap-preferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        pmtc: positional_mod_tap_click {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <1000>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <37 38 39>;
        };
        ltt: lt-tap-preferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            display-name = "Default";
            bindings = <
                &ltt FCN TAB   &plt FCN Q  &kp W        &kp E    &kp R             &kp T                                 &kp Y     &kp U         &kp I         &kp O   &kp P     &minus
                &mth LCTRL RET &kp A       &pmtc LSFT S &kp D    &kp F             &kp G                                 &kp H     &kp J         &kp K         &kp L   &semi     &sqt
                               &kp Z       &kp X        &kp C    &kp V             &kp B                                 &kp N     &kp M         &kp COMMA     &kp DOT &kp SLASH
                                                        &kp LALT &lth SYMBOL SPACE &lth NAVNUM BSPC &mkp LCLK &mkp MCLK  &mkp RCLK &mt LSHFT RET &kp LGUI
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
        symbol_layer {
            display-name = "Symbol";
            bindings = <
                &kp JP_TILDE   &kp JP_EXCL  &kp JP_AT &kp JP_HASH &kp JP_DLLR  &kp JP_PRCNT                         &kp JP_YEN   &kp JP_GRAVE  &kp JP_ASTRK  &kp JP_LPAR  &kp JP_RPAR  &kp JP_EQUAL
                &mth LCTRL RET &kp JP_PLUS  &kp LEFT  &kp DOWN    &kp RIGHT    &kp UP                               &kp LANG1    &kp JP_LBRC   &kp JP_LBKT   &kp JP_RBKT  &kp JP_COLON &kp JP_DQT
                               &kp JP_PIPE  &trans    &trans      &kp JP_CARET &kp JP_AMPS                          &kp LANG2    &kp JP_RBRC   &kp JP_LT     &kp JP_GT    &kp JP_QMARK
                                                      &trans      &trans       &trans           &trans    &trans    &trans       &trans        &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
        navnum_layer {
            display-name = "Navigation/Number";
            bindings = <
                &kp ESC        &kp N1    &kp N2    &kp N3    &kp N4     &kp N5                               &kp N6    &kp N7    &kp N8        &kp N9    &kp N0   &kp PSCRN
                &mth LCTRL RET &kp N6    &kp N7    &kp N8    &kp N9     &kp N0                               &kp UP    &kp LEFT  &kp DOWN      &kp RIGHT &kp BSPC &kp DEL
                               &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V)  &kp LC(Y)                            &kp PG_UP &kp PG_DN &kp HOME      &kp END   &kp CAPSLOCK
                                                   &trans    &trans     &trans      &mkp MB4     &mkp MB5    &trans    &trans    &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
        fcn_layer {
            display-name = "Function";
            bindings = <
                &kp F1 &trans &kp F2 &kp F3 &kp F4 &kp F5                   &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11
                &trans &trans &trans &trans &trans &trans                   &trans &trans &trans &trans &trans  &kp F12
                       &trans &trans &trans &trans &trans                   &trans &trans &trans &trans &trans
                                     &trans &trans &trans &mkp RCLK &trans  &trans &trans &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
        device_layer {
            display-name = "Device";
            bindings = <
                &bootloader &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4          &bt BT_SEL 5 &bt BT_SEL 6 &trans &trans &trans &trans
                &trans      &trans       &trans       &trans       &trans       &trans                &trans       &trans       &trans &trans &trans &trans
                            &trans       &trans       &trans       &trans       &trans                &trans       &trans       &trans &trans &trans
                                                      &trans       &trans       &trans  &trans &trans &trans       &trans       &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
        mouse_layer {
            display-name = "Mouse";
            status = "reserved";
            bindings = <
                &trans &trans &trans &trans &trans &trans               &trans &trans &trans &trans &trans &trans
                &trans &trans &kp LSHFT &mkp MCLK &mkp LCLK &mkp RCLK   &trans &trans &trans &trans &trans &trans
                       &trans &trans &trans &trans &trans               &trans &trans &trans &trans &trans
                                     &trans &trans &trans &trans &trans &trans &trans &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
    };
};